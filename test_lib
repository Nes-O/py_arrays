from math import radians, cos, sin, asin, sqrt

def haversine(lon1: float, lat1: float, lon2: float, lat2: float) -> float:
    """
    Calculate the great circle distance between two points on the 
    earth (specified in decimal degrees), returns the distance in
    kilometers.
    All arguments must be of equal length.
    :param lon1: longitude of first place
    :param lat1: latitude of first place
    :param lon2: longitude of second place
    :param lat2: latitude of second place
    :return: distance in kilometers between the two sets of coordinates
    """
    # Convert decimal degrees to radians
    lon1, lat1, lon2, lat2 = map(radians, [lon1, lat1, lon2, lat2])

    # Haversine formula
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = sin(dlat/2)**2 + cos(lat1) * cos(lat2) * sin(dlon/2)**2
    c = 2 * asin(sqrt(a))
    r = 6371 # Radius of earth in kilometers
    return c * r


# Example usage for a stock (e.g., Apple - AAPL)
stock_ticker = 'AAPL'

# Get stock data
stock_data = get_stock_data(stock_ticker)

# Get stock news
news_headlines = get_stock_news(stock_ticker)

# Analyze sentiment for each news headline
sentiments = [analyze_sentiment(headline) for headline in news_headlines]

# Print stock data
print(f"Stock Data for {stock_ticker}:\n{stock_data}")

# Print news headlines and sentiments
print("\nNews Headlines:")
for headline, sentiment in zip(news_headlines, sentiments):
    print(f"- {headline} (Sentiment: {sentiment})")
